@page "/edit-game"
@page "/edit-game/{id:int}"
@using BlazorCrudDotNet8.Application.Abstract
@using BlazorCrudDotNet8.Domain.Entities
@using BlazorCrudDotNet8.Infrastructure.Services
@inject IGameService GameService
@inject NavigationManager NavigationManager
@rendermode InteractiveAuto

@if (Id == null)
{
    <h3>Add Game</h3>
}
else
{
    <h3>Edit <b>@game.Name</b></h3>
}

<EditForm Model="game" >
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="name" @bind-Value=game.Name class="form-control" style="width: 300px;">@game.Name</InputText>
        <ValidationMessage For="@(() => game.Name)" />
    </div>
    <div class="form-group" style="margin-bottom: 20px;">
        <label for="email">Email</label>
            <InputText id="email" @bind-Value=game.Email class="form-control" style="width: 300px;">@game.Email</InputText>
            <ValidationMessage For="@(() => game.Email)" />
    </div>
    <div class="form-group">
            <button type="submit" class="btn btn btn-success" @onclick="HandleSubmit">Submit</button>
        @if(Id != null)
        {
            <button style="margin-left: 10px;" @onclick="DeleteGame" type="button" class="btn btn-danger">Delete</button>
        }
    </div>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    [SupplyParameterFromForm]
    Game game { get; set; } = new Game { };

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            game = await GameService.GetGameById((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await GameService.AddGame(game);
        }
        else
        {
            await GameService.EditGame((int)Id, game);
        }
        NavigationManager.NavigateTo("/games");
    }

    async Task DeleteGame()
    {
        if (Id != null)
        {
            await GameService.DeleteGame((int)Id);
            NavigationManager.NavigateTo("/games");
        }
    }
}
